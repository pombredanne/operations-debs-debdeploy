#!/usr/bin/python3
# -*- coding: utf-8 -*-
'''
Module for querying installed reverse dependencies of a package
'''

import argparse
import collections
import json
import subprocess
import sys


def parse_args():
    p = argparse.ArgumentParser(
        description='debdeploy-revdeps - Query for installed reverse dependencies')
    p.add_argument('packages', action='store', nargs='+')

    args = p.parse_args(sys.argv[1:])

    return args


def result(success, status, rev_deps):
    '''
    Generates a JSON data set to return to Cumin.
    success: Did an error occur or not? (boolean)
    status: Status code (string)
    rev_deps: List of reverse dependency packages
    '''

    data = collections.OrderedDict()
    data['success'] = success
    data['status'] = status
    data['data'] = rev_deps

    return json.dumps(data)


def main():
    '''
    Lists all the installed reverse dependencies of the package(s).
    '''
    args = parse_args()

    try:
        rev_deps = subprocess.check_output(['apt-cache', '--installed', 'rdepends'] + args.packages,
                                           stderr=subprocess.STDOUT, universal_newlines=True)
    except subprocess.CalledProcessError as e:
        if e.output.startswith('E: No packages found'):
            return result(False, 'INVALID_PACKAGE', [])

        print(('Failed to query reverse dependies', e.returncode))
        return result(False, 'QUERY_FAIL', [])

    deps = set()

    for i in rev_deps.split():
        if i.startswith("|"):  # denotes an alternate dependency
            deps.add(i.strip()[1:])
        elif i in args.packages:  # apt-cache rdepends also prints the package name
            continue
        elif i in ['Depends:', 'Reverse']:  # output by apt-cache
            continue
        else:
            deps.add(i.strip())

    return result(True, 'LIST_DEPS', sorted(deps))


if __name__ == '__main__':
    print(main())

# Local variables:
# mode: python
# End:
